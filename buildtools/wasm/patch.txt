diff --git a/internal/cparser/include/postgres/utils/elog.h b/internal/cparser/include/postgres/utils/elog.h
index 7655196..75141a4 100644
--- a/internal/cparser/include/postgres/utils/elog.h
+++ b/internal/cparser/include/postgres/utils/elog.h
@@ -383,13 +383,13 @@ extern PGDLLIMPORT __thread ErrorContextCallback *error_context_stack;
  */
 #define PG_TRY(...)  \
 	do { \
-		sigjmp_buf *_save_exception_stack##__VA_ARGS__ = PG_exception_stack; \
+		jmp_buf *_save_exception_stack##__VA_ARGS__ = PG_exception_stack; \
 		ErrorContextCallback *_save_context_stack##__VA_ARGS__ = error_context_stack; \
-		sigjmp_buf _local_sigjmp_buf##__VA_ARGS__; \
+		jmp_buf _local_jmp_buf##__VA_ARGS__; \
 		bool _do_rethrow##__VA_ARGS__ = false; \
-		if (sigsetjmp(_local_sigjmp_buf##__VA_ARGS__, 0) == 0) \
+		if (setjmp(_local_jmp_buf##__VA_ARGS__) == 0) \
 		{ \
-			PG_exception_stack = &_local_sigjmp_buf##__VA_ARGS__
+			PG_exception_stack = &_local_jmp_buf##__VA_ARGS__
 
 #define PG_CATCH(...)	\
 		} \
@@ -426,7 +426,7 @@ extern PGDLLIMPORT __thread ErrorContextCallback *error_context_stack;
 	(pg_re_throw(), pg_unreachable())
 #endif
 
-extern PGDLLIMPORT __thread sigjmp_buf *PG_exception_stack;
+extern PGDLLIMPORT __thread jmp_buf *PG_exception_stack;
 
 
 /* Stuff that error handlers might want to use */
diff --git a/internal/cparser/src_backend_utils_error_elog.c b/internal/cparser/src_backend_utils_error_elog.c
index 872d2fd..0b66252 100644
--- a/internal/cparser/src_backend_utils_error_elog.c
+++ b/internal/cparser/src_backend_utils_error_elog.c
@@ -1629,7 +1629,7 @@ pg_re_throw(void)
 {
 	/* If possible, throw the error to the next outer setjmp handler */
 	if (PG_exception_stack != NULL)
-		siglongjmp(*PG_exception_stack, 1);
+		longjmp(*PG_exception_stack, 1);
 	else
 	{
 		/*
diff --git a/internal/cparser/src_port_strerror.c b/internal/cparser/src_port_strerror.c
index 5ce298f..23af0fe 100644
--- a/internal/cparser/src_port_strerror.c
+++ b/internal/cparser/src_port_strerror.c
@@ -160,8 +160,6 @@ get_errno_symbol(int errnum)
 			return "EFAULT";
 		case EFBIG:
 			return "EFBIG";
-		case EHOSTDOWN:
-			return "EHOSTDOWN";
 		case EHOSTUNREACH:
 			return "EHOSTUNREACH";
 		case EIDRM:
